Game of Life

Given a board with m by n cells, each cell has an initial state live (1) or dead (0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):

    Any live cell with fewer than two live neighbors dies, as if caused by under-population.
    Any live cell with two or three live neighbors lives on to the next generation.
    Any live cell with more than three live neighbors dies, as if by over-population..
    Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.

Write a function to compute the next state (after one update) of the board given its current state. The next state is created by applying the above rules simultaneously to every cell in the current state, where births and deaths occur simultaneously.

Example:

Input: 
[
  [0,1,0],
  [0,0,1],
  [1,1,1],
  [0,0,0]
]
Output: 
[
  [0,0,0],
  [1,0,1],
  [0,1,1],
  [0,1,0]
]


// Get the livecell count - by searching 8 directions of the current cell
// set the current cell based on the given condition
// finally reset the poistion in board


												public void GameOfLife(int[][] board) {
													
													if(board == null || board.length == 0) return;
													
													int m = board.length, n = board[0].length;
													int[] xdirs = { -1, -1, -1, 0, 0, 1, 1, 1 };
													int[] ydirs = { -1, 0, 1, -1, 1, -1, 0, 1 };
													
													for(int i=0;i<m;i++)
													{
														for(int j=0;j<n;j++)
														{
															int livecell = 0;
															
															for(int k=0;k<8;k++)
															{
																int x = i + xdirs[k], y = j + ydirs[k];
																if(x>=0 && x<m && y>=0 && y<n && Math.abs(board[x][y]) == 1)
																{
																	livecell += 1;   
																}                    
															}
															
															if(board[i][j] == 1 && (livecell < 2 || livecell > 3))
																board[i][j] = -1;
															else if(board[i][j] == 0 && livecell == 3)
																board[i][j] = 2;
														}
													}
													
													for(int i=0;i<m;i++)
													{
														for(int j=0;j<n;j++)
														{
															if(board[i][j] > 0)
																board[i][j] = 1;
															else
																board[i][j] = 0;
														}
													}
												}