 Substract two numbers represented as linked list and return result as linked list

Example:
Input : 7->1->6 (617)
           5->9->2 (295)
Output : 2->2->3 (322)

	public static void main(String[] args){        
   
        Node result = subtract(n1, n2, 0);
        Node.print(result); 
    }

	public Node subtract(Node n1, Node n2, int borrow){
        //Base condition
        if(n1 == null && n2 == null && borrow == 0)
                return null;
   
        Node result = new Node(borrow);
        int value = borrow;
  
        if(n1.data >= n2.data){
               value += n1.data - n2.data;
               borrow = 0;
        }else{
               if(n1.next != null){
                     value += (n1.data)+10 - n2.data;
                     borrow = -1;
               }else{
                     value += (n1.data)+10 - n2.data;
                     value = value*(-1);
                     borrow = 0;
               }
         }
         result.data = value;
        
         //Recurse
         if(n1.next!=null || n2.next!=null || borrow < 0){
                 Node node = subtract(n1.next != null ? n1.next : null, n2.next != null ? n2.next : null,
                                                    borrow < 0 ? -1 : 0);
        
         result.next = node;
        }
        return result;
    }