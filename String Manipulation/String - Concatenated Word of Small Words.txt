Concatenated Words

Given a list of words, please write a program that returns all concatenated words in the given list of words.

A concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.

Example:

Input: ["cat","cats","catsdogcats","dog","dogcatsdog","hippopotamuses","rat","ratcatdogcat"]

Output: ["catsdogcats","dogcatsdog","ratcatdogcat"]

Explanation: "catsdogcats" can be concatenated by "cats", "dog" and "cats"; 
 "dogcatsdog" can be concatenated by "dog", "cats" and "dog"; 
"ratcatdogcat" can be concatenated by "rat", "cat", "dog" and "cat".


// Backtracking and DFS
// for each word, check the substrings of word is present in dictionary

	public List<String> findAllConcatenatedWordsInADict(String[] words) {
        List<String> result = new ArrayList<>();
        HashSet<String> set = new HashSet<String>(Arrays.asList(words));
        
        for(String word : words) {
            set.remove(word);
            if(ConcatenateWords(word, set))
                result.add(word);
            set.add(word);
        }
        
        return result;
    }
    
    public boolean ConcatenateWords(String word, HashSet<String> set) {
        if(set.contains(word)) return true;
        
        for(int i=1;i<word.length();i++) {
            String s = word.substring(0,i);
            if(set.contains(s)) {
                if(ConcatenateWords(word.substring(i), set))
                    return true;
            }
        }
        return false;
    }
	
	Time - O(n * k^2)
	n - words.length
	k - result length