Rearrange String k Distance Apart

Given a non-empty string s and an integer k, 
rearrange the string such that the same characters are at least distance k from each other.

Example 1:

Input: s = "aabbcc", k = 3
Output: "abcabc" 
Explanation: The same letters are at least distance 3 from each other.

Example 2:

Input: s = "aaabc", k = 3
Output: "" 
Explanation: It is not possible to rearrange the string.

// Get the frequency of characters
// find the character with max frequency with valid index and fill them k distance apart in result
// method to get the character with max frequency, if cant find return empty string

  public string RearrangeString(string s, int k) {
        
        int n = s.Length;
        int[] chars = new int[26];
        int[] valid = new int[26];
        for(int i=0;i<n;i++)
            chars[s[i] - 'a']++;
        
        StringBuilder sb = new StringBuilder();
        
        for(int i=0;i<n;i++)
        {
            int pos = findPosition(chars, valid, i);
            if(pos == -1) return "";
            
            chars[pos]--;
            valid[pos] = i + k;
            sb.Append((char)(pos + 'a'));
        }
        
        return sb.ToString();
    }
    
	// iterating from a to z
	
    public int findPosition(int[] chars, int[] valid, int index)
    {
        int Max = int.MinValue;
        int pos = -1;
        
        for(int i=0;i<26;i++)
        {
            if(chars[i] > 0 && chars[i] > Max && index >= valid[i])                     
            {
                Max = chars[i];
                pos = i;
            }
        }
        return pos;
    }