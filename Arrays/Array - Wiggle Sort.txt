Wiggle Sort

Given an unsorted array nums, reorder it in-place such that nums[0] <= nums[1] >= nums[2] <= nums[3]....

For example, given nums = [3, 5, 2, 1, 6, 4], one possible answer is `[1, 6, 2, 5, 3, 4].

Input: nums = [3,5,2,1,6,4]   Output: One possible answer is [3,5,1,6,2,4]

 
// In-place swaps elements based on odd index or even index

	public void wiggleSort(int[] nums) {
		if (nums == null || nums.length <= 1) 
			return;    
	
		for (int i = 1; i < nums.length; i++) {
			if (i % 2 == 1 && nums[i - 1] > nums[i]) {		
					swap(nums, i - 1, i);
				
			} else if (i % 2 == 0 && nums[i - 1] < nums[i]) {
			
					swap(nums, i - 1, i);
				
			}
		}
	}
	
	private void swap(int[] nums, int i, int j) {
		int t = nums[i];
		nums[i] = nums[j];
		nums[j] = t;
	}


// For Sequence a1 >= a2 <= a3 >= a4 <= a5
	
	public int[] wave(int[] nums) {
        if (nums == null || nums.length <= 1) 
			return nums;    
	
		int n = nums.length;
		
		for (int i = 0; i < n; i+=2) {
		
			// If current element is smaller than previous odd element, swap them    

			if (i > 0 && nums[i] < nums[i-1]) {		
					swap(nums, i, i-1);
				
			}
			// If current element is smaller than next odd element, swap them
			
			else if (i < (n-1) && nums[i+1] > nums[i]) {			
					swap(nums, i, i+1);				
			}
		}
		return nums;    
	}
	
	public void swap(int[] nums, int i, int j) {
		int t = nums[i];
		nums[i] = nums[j];
		nums[j] = t;
	}
	
	
Wiggle Sort II

Given an unsorted array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....

Example 1:

Input: nums = [1, 5, 1, 1, 6, 4]
Output: One possible answer is [1, 4, 1, 5, 1, 6].


// Sort the array and place it in new array with increment 2 

  public void wiggleSort(int[] nums) {
        int n = nums.length;
        
        int[] aux = nums.clone();        
        Arrays.sort(aux);        
        int idx=n-1;
        
        for(int i=1;i<n;i+=2){
            nums[i]=aux[idx--];
        }
        for(int i=0;i<n;i+=2){
            nums[i]=aux[idx--];
        }
    }