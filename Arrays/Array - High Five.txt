High Five 

Given a list of scores of different students, return the average score of each student's top five scores in the order of each student's id.

Each entry items[i] has items[i][0] the student's id, and items[i][1] the student's score.  The average score is calculated using integer division.

Example 1:

Input: [[1,91],[1,92],[2,93],[2,97],[1,60],[2,77],[1,65],[1,87],[1,100],[2,100],[2,76]]
Output: [[1,87],[2,88]]
Explanation: 
The average of the student with id = 1 is 87.
The average of the student with id = 2 is 88.6. But with integer division their average converts to 88.


	public int[][] highFive(int[][] items) {
        Map<Integer, PriorityQueue<Integer>> map = new HashMap<>();
        for (int[] item: items){
        	PriorityQueue<Integer> pq = map.getOrDefault(item[0], new PriorityQueue<>());
        	pq.offer(item[1]);
        	if (pq.size() > 5){
        		pq.poll();
        	}
        	map.put(item[0], pq);
        }
        int[][] res = new int[map.keySet().size()][2];
        int index = 0;
        for (Integer i : map.keySet()){
        	PriorityQueue<Integer> pq = map.get(i);
        	int count = pq.size();
        	int sum = 0;
        	while (!pq.isEmpty()){
        		sum += pq.poll();
        	}
        	res[index++] = new int[]{i, sum / count};
        }
        return res;
    }