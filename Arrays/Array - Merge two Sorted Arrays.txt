Merge Sorted Array

Given two sorted integer arrays nums1 and nums2, merge nums2 into nums1 as one sorted array.

You may assume that nums1 has enough space (size that is equal to m + n) to hold additional elements from nums2.

Example:

Input:
nums1 = [1,2,3,0,0,0], m = 3
nums2 = [2,5,6],       n = 3

Output: [1,2,2,3,5,6]


	public void merge(int[] nums1, int m, int[] nums2, int n) {
        int n1 = m-1;
        int n2 = n-1;
        int idx = m+n-1;
        
        while(n2 >=0) {
            if(n1 >= 0 && nums1[n1] > nums2[n2]) {
                nums1[idx] = nums1[n1];
                n1--;
            }
            else {
                nums1[idx] = nums2[n2];
                n2--;
            }
            idx--;
        }
    }
	

// Merge two sorted arrays with O(1) extra space

Example:

Input: ar1[] = {1, 5, 9, 10, 15, 20};
       ar2[] = {2, 3, 8, 13};
Output: ar1[] = {1, 2, 3, 5, 8, 9}
        ar2[] = {10, 13, 15, 20} 
		
		
	static int arr1[] = new int[]{1, 5, 9, 10, 15, 20}; 
    static int arr2[] = new int[]{2, 3, 8, 13}; 
      
    static void merge(int m, int n) 
    { 
        // Iterate through all elements of arr2[] starting from the last element 
		
        for (int i=n-1; i>=0; i--) 
        { 
            // Find the smallest element greater than ar2[i]. Move all elements one position ahead
			
            int j=0, last = arr1[m-1]; 
            for (j = m-2; j >= 0 && arr1[j] > arr2[i]; j--) 
                arr1[j+1] = arr1[j]; 
       
            // If there was a greater element 
			
            if (j != m-2 || last > arr2[i]) 
            { 
                arr1[j+1] = arr2[i]; 
                arr2[i] = last; 
            } 
        } 
    } 
      
