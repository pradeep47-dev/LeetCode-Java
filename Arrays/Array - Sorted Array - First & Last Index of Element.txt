Find First and Last Position of Element in Sorted Array

Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

If the target is not found in the array, return [-1, -1].

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]

Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]


												public int[] searchRange(int[] nums, int target) {
													int n = nums.length;        
													int[] result = { -1, -1 };
													if(n == 0) return result;
													
													int start = 0, end = n-1;
													
													while(start < end) {
														int mid = (start+end) / 2;
														
														if(nums[mid] < target) 
															start = mid+1;
														else
															end = mid;
													}
													
													if(nums[start] != target) return result;
													
													result[0] = start;
													end = n-1;
													
													while(start < end) {
														int mid = 1 + (start+end) / 2;
														
														if(nums[mid] <= target)
															start = mid;
														else
															end = mid-1;
													}
													
													result[1] = end;
													return result;
												}