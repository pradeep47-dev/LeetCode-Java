Subarrays with K Different Integers

Given an array A of positive integers, number of different integers in that subarray is exactly K.

For example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.

Return the number of good subarrays of A.
 

Example 1:

Input: A = [1,2,1,2,3], K = 2
Output: 7
Explanation: Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].

Example 2:

Input: A = [1,2,1,3,4], K = 3
Output: 3
Explanation: Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].


// Sliding window - get the no of subsets of array with K distinct integers and K - 1
// difference between them will be the answer

	public int subarraysWithKDistinct(int[] A, int K) {
        int n = A.length;
        if(n * K == 0) return 0;
        
        return subarrays(A, K) - subarrays(A, K-1);         
    }
    
    public int subarrays(int[] A, int k) {
        int n = A.length;
        int[] count = new int[n+1];
        int ans = 0, start = 0;
        
        for(int end=0;end<n;end++) {            
            if(count[A[end]] == 0)
                k--;
            
            count[A[end]]++;
            while(k < 0) {
                count[A[start]]--;
                if(count[A[start]] == 0)
                    k++;
                start++;
            }
            ans += end-start+1;
        }
        return ans;
    }
