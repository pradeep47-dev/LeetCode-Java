Rotate Array

Given an array, rotate the array to the right by k steps, where k is non-negative.

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

// Rotate array to Right

// Using Cyclic Replacements

	public void rotate(int[] nums, int k) {
        int n = nums.length;
        int[] arr = new int[n];
     
        for(int i = 0; i < n; i++){
            arr[(i + k) % n] = nums[i];       
        }
        
        for(int i = 0; i < n; i++){
            nums[i] = arr[i];
        }         
    }

// using Reverse

	public void rotate(int[] nums, int k) {
		int n = nums.length;
		k = k % n;
		reverse(nums, 0, n-k-1);
		reverse(nums, n-k, n-1);
		reverse(nums, 0, n-1);
	}
	
	public void reverse(int[] nums, int start, int end) {
		while (start < end) {
			int temp = nums[start];
			nums[start] = nums[end];
			nums[end] = temp;
			start++;
			end--;
		}
	}
	
	
// Rotate Left

	static int[] rotateLeft(int[] a, int k) {

        int n = a.length;
        int[] arr = new int[n];
        int mod = k % n; 

        for (int i = 0; i < n; i++)
            arr[i] = a[(i + mod) % n];

        return arr;
    }