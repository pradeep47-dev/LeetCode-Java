Building Heap from Array

Given an array of N elements. The task is to build a Binary Heap from the given array. The heap can be either Max Heap or Min Heap.

Example:

Input: arr[] = {4, 10, 3, 5, 1}
Output: Corresponding Max-Heap:
       10
     /   \
    5     3
   /  \
  4    1

Input: arr[] = {1, 3, 5, 4, 6, 13, 10, 9, 8, 15, 17}
Output: Corresponding Max-Heap:
                 17
              /      \
            15         13
          /    \      /  \
         9      6    5   10
        / \    /  \
       4   8  3    1



	public static void Main() 
	{ 		
		int[] arr = { 1, 3, 5, 4, 6, 13, 10, 9, 8, 15, 17 }; 
		int n = arr.Length; 
		buildHeap(arr, n); 		
	} 	
		
	public static void buildHeap(int[] arr, int n) 
	{ 		
		int startIdx = (n / 2) - 1; 

		// Perform reverse level order traversal from last non-leaf node and heapify each node 
		for (int i = startIdx; i >= 0; i--) 
		{ 
			heapify(arr, n, i); 
		} 
	} 
	
	public static void heapify(int[] arr, int n, int i) 
	{ 
		int largest = i; 	// Initialize largest as root 
		int l = 2 * i + 1; 	// left = 2*i + 1 
		int r = 2 * i + 2; 	// right = 2*i + 2 

							
		if (l < n && arr[l] > arr[largest]) // If left child is larger than root 
			largest = l; 

		
		if (r < n && arr[r] > arr[largest]) // If right child is larger than largest so far 
			largest = r; 

		
		if (largest != i) // If largest is not root 
		{ 
			int swap = arr[i]; 
			arr[i] = arr[largest]; 
			arr[largest] = swap; 

			// Recursively heapify the sub-tree 
			heapify(arr, n, largest); 
		} 
	} 

	

	
	



