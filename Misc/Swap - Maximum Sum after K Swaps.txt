Maximize Sum Of Array After K Negations

Given an array A of integers, we must modify the array in the following way: we choose an i and 
replace A[i] with -A[i], and we repeat this process K times in total. (We can choose same index multiple times.)

Return the largest possible sum of the array after modifying it in this way.


Example 1:

Input: A = [4,2,3], K = 1
Output: 5
Explanation: Choose indices (1,) and A becomes [4,-2,3].

Example 2:

Input: A = [3,-1,0,2], K = 3
Output: 6
Explanation: Choose indices (1, 2, 2) and A becomes [3,1,0,2].


	public int largestSumAfterKNegations(int[] A, int k){
        int sum = 0;
        int min = Integer.MAX_VALUE;
        Arrays.sort(A);
        
        for(int i=0;i<A.length;i++) {
            if(A[i] < 0 && k > 0) {
                A[i] = - A[i];
                k--;
            }
            min = Math.min(min, A[i]);
            sum += A[i];
        }
        
        if(k>0 && min >= 0 && k%2 !=0 || min < 0 && k%2!= 0)
            sum -= 2 * min;
        
        return sum;
    }