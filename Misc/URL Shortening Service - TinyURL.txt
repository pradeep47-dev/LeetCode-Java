Encode and Decode TinyURL

TinyURL is a URL shortening service where you enter a URL such as https://leetcode.com/problems/design-tinyurl and it returns a short URL such as http://tinyurl.com/4e9iAk.

Design the encode and decode methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.

public class Codec {
    
    public static string chars = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";   
    public static Dictionary<string,string> Map = new Dictionary<string,string>();
    public static Random rand = new Random();
    public static string key = getRandom();
    
    public static string getRandom()
    {
        StringBuilder sb = new StringBuilder();
        
        for(int i=0;i<6;i++)
        {
            sb.Append(chars[rand.Next(62)]);
        }
        return sb.ToString();
    }
    
    // Encodes a URL to a shortened URL
    public string encode(string longUrl) {
            
        while(Map.ContainsKey(key))
        {
            key = getRandom();
        }
        
        Map[key] = longUrl;
        return "http://tinyurl.com/" + key;
    }

    // Decodes a shortened URL to its original URL.
    public string decode(string shortUrl) {
        return Map[shortUrl.Replace("http://tinyurl.com/","").ToString()];
    }
}

